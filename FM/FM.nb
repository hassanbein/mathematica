(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 13.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     17114,        392]
NotebookOptionsPosition[     15980,        363]
NotebookOutlinePosition[     16474,        382]
CellTagsIndexPosition[     16431,        379]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"v", "[", "t_", "]"}], ":=", 
   RowBox[{"A", "*", 
    RowBox[{"Cos", "[", 
     RowBox[{"\[Omega]t", "-", 
      RowBox[{"2", "*", 
       RowBox[{"ArcTan", "[", 
        RowBox[{
         SubscriptBox["R", "0"], 
         SubscriptBox["C", "0"], "\[Omega]"}], "]"}]}]}], "]"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"e", "[", "t_", "]"}], ":=", 
   RowBox[{"A", "*", 
    RowBox[{"Cos", "[", "\[Omega]t", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"u", "[", "t", "]"}], "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"K", "*", 
      RowBox[{"e", "[", "t", "]"}], "*", 
      RowBox[{"v", "[", "t", "]"}]}], "//", "FullSimplify"}], "//", 
    "TrigReduce"}], "//", "Expand"}]}]}], "Input",
 CellChangeTimes->{{3.8783149031094465`*^9, 3.878314942914708*^9}, {
  3.8783150206876273`*^9, 3.878315331904496*^9}, {3.878316345624267*^9, 
  3.878316353239638*^9}},
 CellLabel->"In[1]:=",ExpressionUUID->"b9cf34fe-38d2-4e8f-a448-b8517c46cb7a"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["A", "2"], " ", "K", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{
     RowBox[{"2", " ", "\[Omega]t"}], "-", 
     RowBox[{"2", " ", 
      RowBox[{"ArcTan", "[", 
       RowBox[{"\[Omega]", " ", 
        SubscriptBox["C", "0"], " ", 
        SubscriptBox["R", "0"]}], "]"}]}]}], "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["A", "2"], " ", "K", " ", 
   RowBox[{"Cos", "[", 
    RowBox[{"2", " ", 
     RowBox[{"ArcTan", "[", 
      RowBox[{"\[Omega]", " ", 
       SubscriptBox["C", "0"], " ", 
       SubscriptBox["R", "0"]}], "]"}]}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.8783151734105563`*^9, 3.878315270389139*^9}, {
   3.8783153151221223`*^9, 3.878315333815925*^9}, 3.878407903146085*^9},
 CellLabel->"Out[3]=",ExpressionUUID->"9140bcc5-4b1b-44fd-8267-71d255dc0c50"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Arctan(u(x))'", "WolframAlphaLong",
 CellChangeTimes->{{3.8783185074650435`*^9, 3.8783185200401373`*^9}},
 CellLabel->"In[4]:=",ExpressionUUID->"225b4623-f03d-403f-b208-00dbf877b681"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Arctan(u(x))'", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Derivative", "scanner" -> "Derivative", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"D[ArcTan[u[x]], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                TagBox[
                 FractionBox["\[DifferentialD]", 
                  RowBox[{"\"\[DifferentialD]\"", "\[InvisibleSpace]", "x"}]], 
                 $CellContext`TagBoxWrapper[
                 "StringBoxes" -> RowBox[{"d/d", "\[InvisibleSpace]", "x"}]]],
                 "\[InvisibleSpace]", 
                RowBox[{"(", 
                  TagBox[
                   RowBox[{
                    SuperscriptBox["tan", 
                    RowBox[{"-", "1"}]], "(", 
                    RowBox[{
                    FormBox["u", TraditionalForm], "(", "x", ")"}], ")"}], 
                   HoldForm], ")"}]}], "\[LongEqual]", 
              FractionBox[
               RowBox[{
                 SuperscriptBox[
                  FormBox["u", TraditionalForm], "\[Prime]", 
                  MultilineFunction -> None], "(", "x", ")"}], 
               RowBox[{
                 SuperscriptBox[
                  RowBox[{
                    FormBox["u", TraditionalForm], "(", "x", ")"}], "2"], "+",
                  "1"}]]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution", "stepbystep" -> "true"}, {}]}], 
     XMLElement["infos", {"count" -> "1"}, {
       XMLElement[
       "info", {"text" -> "tan^(-1)(x) is the inverse tangent function"}, {
         XMLElement[
         "link", {
          "url" -> "http://reference.wolfram.com/language/ref/ArcTan.html", 
           "text" -> "Documentation", "title" -> "Mathematica"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://functions.wolfram.com/ElementaryFunctions/ArcTan", 
           "text" -> "Properties", "title" -> "Wolfram Functions Site"}, {}], 
         XMLElement[
         "link", {
          "url" -> "http://mathworld.wolfram.com/InverseTangent.html", "text" -> 
           "Definition", "title" -> "MathWorld"}, {}]}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "1", "datatypes" -> "D", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "0.389", "parsetiming" -> "0.211", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP211422765a8cahf50371000010cae352ge06825f", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "15", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa211522765a8cahf5037100002cdic8d2b6h610118884920455003441207", "version" -> 
    "2.6", "inputstring" -> "Arctan(u(x))'"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2022, 11, 26, 0, 31, 49.5866423`9.447939557067857}, "Line" -> 
    4, "SessionID" -> 25211550078995773256}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Arctan(u(x))'"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1059.4, {91.96718750000001, 100.43281249999998`}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.8784079096081142`*^9},ExpressionUUID->"b95a6cd2-2327-4854-bfdf-\
e541594b0879"]
}, Open  ]],

Cell[CellGroupData[{

Cell["Cos[u(x)]'", "WolframAlphaLong",
 CellChangeTimes->{{3.878318541897152*^9, 3.8783185585420475`*^9}},
 CellLabel->"In[5]:=",ExpressionUUID->"f8a274ef-f741-41ab-abdf-e3ec0a163333"],

Cell[BoxData[
 NamespaceBox["WolframAlphaQueryResults",
  DynamicModuleBox[{Typeset`q$$ = "Cos[u(x)]'", Typeset`opts$$ = {
   AppearanceElements -> {
     "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
      "Sources"}, Asynchronous -> All, 
    TimeConstraint -> {20, Automatic, Automatic, Automatic}, 
    Method -> {
     "Formats" -> {"cell", "minput", "msound", "dataformats"}, "Server" -> 
      "https://api.wolframalpha.com/v1/"}}, Typeset`elements$$ = {
   "Warnings", "Assumptions", "Brand", "Pods", "PodMenus", "Unsuccessful", 
    "Sources"}, Typeset`pod1$$ = XMLElement[
   "pod", {"title" -> "Derivative", "scanner" -> "Derivative", "id" -> 
     "Input", "position" -> "100", "error" -> "false", "numsubpods" -> "1", 
     "primary" -> "true"}, {
     XMLElement["subpod", {"title" -> ""}, {
       XMLElement["minput", {}, {"D[Cos[u[x]], x]"}], 
       XMLElement["cell", {"compressed" -> False, "string" -> True}, {
         Cell[
          BoxData[
           FormBox[
            RowBox[{
              RowBox[{
                TagBox[
                 FractionBox["\[DifferentialD]", 
                  RowBox[{"\"\[DifferentialD]\"", "\[InvisibleSpace]", "x"}]], 
                 $CellContext`TagBoxWrapper[
                 "StringBoxes" -> RowBox[{"d/d", "\[InvisibleSpace]", "x"}]]],
                 "\[InvisibleSpace]", 
                RowBox[{"(", 
                  TagBox[
                   RowBox[{"cos", "(", 
                    RowBox[{
                    FormBox["u", TraditionalForm], "(", "x", ")"}], ")"}], 
                   HoldForm], ")"}]}], "\[LongEqual]", 
              RowBox[{
                RowBox[{
                  SuperscriptBox[
                   FormBox["u", TraditionalForm], "\[Prime]", 
                   MultilineFunction -> None], "(", "x", ")"}], " ", 
                RowBox[{"(", 
                  RowBox[{"-", 
                    RowBox[{"sin", "(", 
                    RowBox[{
                    FormBox["u", TraditionalForm], "(", "x", ")"}], ")"}]}], 
                  ")"}]}]}], TraditionalForm]], "Output", {
          Background -> None, 
           GraphicsBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics"}, 
             DefaultAxesStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsAxes"], DefaultFrameStyle -> Directive[
               GrayLevel[0, 0.35], FontColor -> GrayLevel[0.25], FontOpacity -> 
               1, "GraphicsFrame"], DefaultFrameTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsFrameTicks"], 
             DefaultTicksStyle -> 
             Directive[
              FontFamily -> "Times", FontSize -> 10, "GraphicsTicks"]}, 
           Graphics3DBoxOptions -> {
            DefaultBaseStyle -> {FontFamily -> "Times", "Graphics3D"}}}, 
          NumberPoint -> ".", CellSize -> {550, Automatic}, 
          AutoStyleOptions -> {"HighlightFormattingErrors" -> False}, 
          RenderingOptions -> {
           "3DRenderingMethod" -> "BSPTreeOrDepthBuffer"}]}], 
       XMLElement[
       "dataformats", {}, {
        "plaintext,minput,moutput,computabledata,formatteddata,formuladata"}]}\
], 
     XMLElement["expressiontypes", {"count" -> "1"}, {"\n   ", 
       XMLElement["expressiontype", {"name" -> "Default"}, {}], "\n  "}], 
     XMLElement["states", {"count" -> "1"}, {
       XMLElement[
       "state", {
        "name" -> "Step-by-step solution", "input" -> 
         "Input__Step-by-step solution", "stepbystep" -> "true"}, {}]}]}], 
   Typeset`aux1$$ = {True, False, {False}, True}, Typeset`asyncpods$$ = {}, 
   Typeset`nonpods$$ = {}, Typeset`initdone$$ = 
   FrontEnd`SuppressEvaluationHash[True], Typeset`queryinfo$$ = {
   "success" -> "true", "error" -> 
    "false", {"http://www.w3.org/XML/1998/namespace", "space"} -> "preserve", 
    "numpods" -> "1", "datatypes" -> "D", "timedout" -> "", "timedoutpods" -> 
    "", "timing" -> "0.358", "parsetiming" -> "0.21", "parsetimedout" -> 
    "false", "recalculate" -> "", "id" -> 
    "MSP35611h4fde6i6e52haa40000463gaeie16a62eb0", "host" -> 
    "https://www6b3.wolframalpha.com", "server" -> "9", "related" -> 
    "https://www6b3.wolframalpha.com/api/v1/relatedQueries.jsp?id=\
MSPa35621h4fde6i6e52haa400000gc07717899b4cgf1494138648170584556", "version" -> 
    "2.6", "inputstring" -> "Cos[u(x)]'"}, Typeset`sessioninfo$$ = {
   "TimeZone" -> 1., 
    "Date" -> {2022, 11, 26, 0, 31, 51.8380409`9.467223430063608}, "Line" -> 
    5, "SessionID" -> 25211550078995773256}, Typeset`showpods$$ = {1}, 
   Typeset`failedpods$$ = {}, Typeset`chosen$$ = {}, Typeset`open$$ = False, 
   Typeset`newq$$ = "Cos[u(x)]'"}, 
   DynamicBox[ToBoxes[
     AlphaIntegration`FormatAlphaResults[
      Dynamic[{
       1, {Typeset`pod1$$}, {Typeset`aux1$$}, Typeset`chosen$$, 
        Typeset`open$$, Typeset`elements$$, Typeset`q$$, Typeset`opts$$, 
        Typeset`nonpods$$, Typeset`queryinfo$$, Typeset`sessioninfo$$, 
        Typeset`showpods$$, Typeset`failedpods$$, Typeset`newq$$}]], 
     StandardForm],
    ImageSizeCache->{1059.4, {76.96718750000001, 85.43281249999998}},
    TrackedSymbols:>{Typeset`showpods$$, Typeset`failedpods$$}],
   DynamicModuleValues:>{},
   Initialization:>If[
     And[
      Not[Typeset`initdone$$ === True], 
      Not[Typeset`initdone$$ === FrontEnd`SuppressEvaluationHash[True]]], 
     Null; WolframAlphaClient`Private`doAsyncUpdates[
       Hold[{Typeset`pod1$$}], Typeset`asyncpods$$, 
       Dynamic[Typeset`failedpods$$]]; Typeset`asyncpods$$ = {}; 
     Typeset`initdone$$ = FrontEnd`SuppressEvaluationHash[True]],
   SynchronousInitialization->False],
  BaseStyle->{Deployed -> True},
  DeleteWithContents->True,
  Editable->False,
  SelectWithContents->True]], "Print", "WolframAlphaFullOutput",
 CellChangeTimes->{
  3.878407911850789*^9},ExpressionUUID->"5453e19e-435c-4f7b-a06e-\
0d5cad4846f1"]
}, Open  ]],

Cell[BoxData[
 SubscriptBox[
  SubscriptBox["\[Placeholder]", "\[Placeholder]"], 
  "\[Placeholder]"]], "Input",
 CellChangeTimes->{{3.878407916293457*^9, 
  3.8784079166520114`*^9}},ExpressionUUID->"534aec66-68ec-4d3e-811b-\
a8cc4ab59c83"]
},
Evaluator->"Local",
WindowSize->{1141.2, 587.4},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules-><|"TryRealOnly" -> False|>,
Magnification:>1.6 Inherited,
FrontEndVersion->"13.1 pour Microsoft Windows (64-bit) (June 16, 2022)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"9890515e-f2d5-4db3-8eb3-b4101e54948f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 1044, 30, 182, "Input",ExpressionUUID->"b9cf34fe-38d2-4e8f-a448-b8517c46cb7a"],
Cell[1627, 54, 894, 24, 71, "Output",ExpressionUUID->"9140bcc5-4b1b-44fd-8267-71d255dc0c50"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2558, 83, 189, 2, 64, "WolframAlphaLong",ExpressionUUID->"225b4623-f03d-403f-b208-00dbf877b681"],
Cell[2750, 87, 6749, 136, 207, "Print",ExpressionUUID->"b95a6cd2-2327-4854-bfdf-e541594b0879"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9536, 228, 184, 2, 64, "WolframAlphaLong",ExpressionUUID->"f8a274ef-f741-41ab-abdf-e3ec0a163333"],
Cell[9723, 232, 5998, 120, 177, "Print",ExpressionUUID->"5453e19e-435c-4f7b-a06e-0d5cad4846f1"]
}, Open  ]],
Cell[15736, 355, 240, 6, 45, "Input",ExpressionUUID->"534aec66-68ec-4d3e-811b-a8cc4ab59c83"]
}
]
*)

